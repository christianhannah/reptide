#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Tue Aug  6 15:42:55 2024

Example script highlighting the use of reptide.

@author: christian
"""

import _reptide_final as rep
import numpy as np


# =============================================================================
# =================== DEFINE INPUT PARAMETER ARRAYS ===========================
# =============================================================================

# NOTE: All values used for the input arrays must be in SI units when applicable

name = 'Example Galaxy'

# define the black hole mass
M_BH = 8e7 # in M_sol

# define radii in pc
rads = np.array([1.20667367,    1.29232318,    1.38405208,    1.48229189,
                 1.58750474,    1.70018559,    1.8208645 ,    1.95010919,
                 2.08852764,    2.23677102,    2.39553669,    2.56557152,
                 2.74767539,    2.94270498,    3.15157773,    3.37527624,
                 3.61485283,    3.87143454,    4.14622837,    4.44052703,
                 4.75571496,    5.09327489,    5.45479477,    5.84197527,
                 6.25663779,    6.70073299,    7.17635   ,    7.68572623,
                 8.23125791,    8.81551135,    9.44123501,   10.11137243,
                 10.82907611,   11.59772229,   12.42092686,   13.30256236,
                 14.24677621,   15.25801023,   16.34102147,   17.5009047 ,
                 18.74311625,   20.0734998 ,   21.49831376,   23.02426081,
                 24.65851935,   26.4087773 ,   28.2832683 ,   30.29081039,
                 32.44084751,   34.74349394,   37.20958187,   39.85071233,
                 42.67930984,   45.70868077,   48.95307599,   52.42775789,
                 56.14907218,   60.1345248 ,   64.40286423,   68.97416975,
                 73.86994584,   79.11322338,   84.72866796,   90.74269594,
                 97.18359872,  104.08167579,  111.46937733,  119.3814568 ,
                 127.85513447,  136.9302725 ,  146.64956244,  157.05872611,
                 168.20673063,  180.14601882,  192.93275587,  206.62709358,
                 221.2934533 ,  237.000829  ,  253.82311184,  271.83943777,
                 291.13455977,  311.7992466 ,  333.93070976,  357.63306082,
                 383.01780115,  410.2043465 ,  439.32058871,  470.50349737,
                 503.89976414,  539.66649286,  577.97193856,  618.99629896,
                 662.93256224,  709.98741482,  760.38221368,  814.35402771,
                 872.1567529 ,  934.06230675, 1000.3619074 , 1071.36744364])

# define densities in M_sol/pc^3
dens = np.array([3.48758898e+04, 3.27770162e+04, 3.08985182e+04, 2.92051984e+04,
                 2.76494174e+04, 2.61790555e+04, 2.47460158e+04, 2.33131915e+04,
                 2.18583274e+04, 2.03743496e+04, 1.88669412e+04, 1.73507948e+04,
                 1.58458271e+04, 1.43740032e+04, 1.29568336e+04, 1.16133966e+04,
                 1.03588370e+04, 9.20345353e+03, 8.15251684e+03, 7.20682560e+03,
                 6.36378898e+03, 5.61863088e+03, 4.96528220e+03, 4.39672012e+03,
                 3.90485928e+03, 3.48040064e+03, 3.11309036e+03, 2.79257278e+03,
                 2.50960556e+03, 2.25712048e+03, 2.03064798e+03, 1.82793984e+03,
                 1.64800794e+03, 1.49002501e+03, 1.35250990e+03, 1.23301836e+03,
                 1.12832556e+03, 1.03492840e+03, 9.49636318e+02, 8.70038861e+02,
                 7.94714478e+02, 7.23154845e+02, 6.55483141e+02, 5.92099181e+02,
                 5.33372694e+02, 4.79452058e+02, 4.30200158e+02, 3.85235486e+02,
                 3.44042422e+02, 3.06108029e+02, 2.71040583e+02, 2.38632995e+02,
                 2.08855357e+02, 1.81788724e+02, 1.57533628e+02, 1.36131060e+02,
                 1.17520677e+02, 1.01540324e+02, 8.79542355e+01, 7.64903239e+01,
                 6.68696316e+01, 5.88200771e+01, 5.20773942e+01, 4.63833867e+01,
                 4.14913584e+01, 3.71814738e+01, 3.32801902e+01, 2.96739132e+01,
                 2.63098165e+01, 2.31834830e+01, 2.03187712e+01, 1.77470197e+01,
                 1.54907522e+01, 1.35539234e+01, 1.19185916e+01, 1.05470946e+01,
                 9.38848773e+00, 8.38751594e+00, 7.49382535e+00, 6.66903690e+00,
                 5.89004829e+00, 5.14831538e+00, 4.44622219e+00, 3.79230069e+00,
                 3.19681258e+00, 2.66845508e+00, 2.21230110e+00, 1.82882724e+00,
                 1.51390138e+00, 1.25962830e+00, 1.05585529e+00, 8.91968750e-01,
                 7.58500797e-01, 6.48120633e-01, 5.55822130e-01, 4.78435190e-01,
                 4.13821234e-01, 3.60147072e-01, 3.15481558e-01, 2.77747397e-01])
    
# define the inner slope flag to specify a fixed inner power-law density slope (s) 
sflag = True
s = 1.77 # slope must always be positive

# if the slope is too steep, set the bw_cusp parameter to true 
# Note that slopes >= 2.25 extrapolated all the way to the MBH cause a divergent TDE rate 
if s >= 2.25:
    bw_cusp = True
else:
    bw_cusp = False

bw_rad = 5e+16 # 1.79 pc in m 

# convert everything to SI units for modeling
rads_SI = rads*rep.PC_TO_M # m
dens_SI = dens*(rep.M_SOL/rep.PC_TO_M**3) # kg/m^3
MBH_SI = M_BH*rep.M_SOL # kg


# =============================================================================
# =============================================================================
# =============================================================================


# =============================================================================
# ============== CREATE THE INPUT .FITS FILE FOR REPTIDE ======================
# =============================================================================

# Create the input fits files using the built in functions
in_table = rep.create_discrete_input_table(name, rads_SI, dens_SI, MBH_SI, sflag, s, 
                                           bw_cusp, bw_rad, quiet=False)

# =============================================================================
# =============================================================================
# =============================================================================


# =============================================================================
# ========================= CALL REPTIDE ======================================
# =============================================================================

output_table = rep.run_reptide(in_table, analytic=False, n_energies=100, EHS=False)

# =============================================================================
# =============================================================================
# =============================================================================